{"version":3,"sources":["webpack:///./src/pages/twitchProject.js","webpack:///./src/pages/projectPage.module.css","webpack:///./src/static/images/screenshots/twitch/twitch-320w.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_projectPage_module_css__WEBPACK_IMPORTED_MODULE_1__","_projectPage_module_css__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","_static_images_screenshots_twitch_twitch_320w_png__WEBPACK_IMPORTED_MODULE_3__","_static_images_screenshots_twitch_twitch_320w_png__WEBPACK_IMPORTED_MODULE_3___default","TwitchTvProject","a","createElement","className","styles","outerDiv","variant","align","href","target","rel","image","src","twitchScreenShot","info","module","exports","figure","p"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAAK,EAAAG,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAK,EAAAK,GAqDeE,UAhDS,kBACtBR,EAAAS,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,UACrBb,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,WAAWC,MAAM,UAArC,kBAGAf,EAAAS,EAAAC,cAAA,cACEV,EAAAS,EAAAC,cAAA,KACEM,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAEJlB,EAAAS,EAAAC,cAAA,OAAKC,UAAWC,IAAOO,MAAOC,IAAKC,OAErCrB,EAAAS,EAAAC,cAAA,kBACEV,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQC,MAAM,UAAlC,+CAKJf,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQH,UAAWC,IAAOU,MAA9C,6NAKAtB,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQH,UAAWC,IAAOU,MAA9C,mXAOAtB,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQH,UAAWC,IAAOU,MAA9C,gNAKAtB,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQH,UAAWC,IAAOU,MAA9C,gQAMAtB,EAAAS,EAAAC,cAACL,EAAAI,EAAD,CAAYK,QAAQ,QAAQH,UAAWC,IAAOU,MAA9C,+EC9CJC,EAAAC,QAAA,CAAkBX,SAAA,sCAAAY,OAAA,oCAAAN,MAAA,mCAAAG,KAAA,wDCDlBC,EAAAC,QAAiB5B,EAAA8B,EAAuB","file":"component---src-pages-twitch-project-js-b39f732f032def8285ef.js","sourcesContent":["import React from 'react'\r\nimport styles from './projectPage.module.css'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport twitchScreenShot from '../static/images/screenshots/twitch/twitch-320w.png'\r\n\r\nconst TwitchTvProject = () => (\r\n  <div className={styles.outerDiv}>\r\n    <Typography variant=\"display3\" align=\"center\">\r\n      Twitch.Tv Tool\r\n    </Typography>\r\n    <figure>\r\n      <a\r\n        href=\"https://blbaylis.github.io/twitch-tv-tool/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className={styles.image} src={twitchScreenShot} />\r\n      </a>\r\n      <figcaption>\r\n        <Typography variant=\"body2\" align=\"center\">\r\n          Click the screenshot to visit my project!\r\n        </Typography>\r\n      </figcaption>\r\n    </figure>\r\n    <Typography variant=\"title\" className={styles.info}>\r\n      The primary aim of this project was to fetch data from the Twitch.Tv API,\r\n      in order to display a list of Twitch streams provided by Freecodecamp and\r\n      display information about them including whether the stream was live.\r\n    </Typography>\r\n    <Typography variant=\"title\" className={styles.info}>\r\n      I&#39;m a gamer who visits the Twitch website frequently and so I decided\r\n      to go a bit further and flesh out the tool somewhat compared to the rather\r\n      minimal aims of the project. As a result, I added search functionality for\r\n      any streamer on Twitch along with some streams I personally enjoy and the\r\n      featured streams of Twitch which display on the Twitch website main page.\r\n    </Typography>\r\n    <Typography variant=\"title\" className={styles.info}>\r\n      This project was one of my earliest projects to deal with asynchronous\r\n      Javscript and in particular ES6 Promises, which I learnt during this\r\n      project. This led to working, but messy and hard to follow code.\r\n    </Typography>\r\n    <Typography variant=\"title\" className={styles.info}>\r\n      I&#39;ve learnt much since then and my data fetching functions now utilise\r\n      the fetch syntax and async/await syntax, which make for very\r\n      straight-forward code. I gained a better grasp of the promise and\r\n      generator functions which these features are built on.\r\n    </Typography>\r\n    <Typography variant=\"title\" className={styles.info}>\r\n      This is my favourite project I&#39;ve worked on overall!\r\n    </Typography>\r\n  </div>\r\n)\r\n\r\nexport default TwitchTvProject\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerDiv\":\"projectPage-module--outerDiv--3KpIX\",\"figure\":\"projectPage-module--figure--8SWbv\",\"image\":\"projectPage-module--image--2JlCr\",\"info\":\"projectPage-module--info--vq5X0\"};","module.exports = __webpack_public_path__ + \"static/twitch-320w-1ff603c36ff09df383db3ea9dcf5b838.png\";"],"sourceRoot":""}